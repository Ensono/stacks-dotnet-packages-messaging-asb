name: $(Build.SourceBranchName)-init

variables:
  # Versioning
  - name: Version.Major
    value: 0
  - name: Version.Minor
    value: 2
  - name: Version.Revision
    value: $[counter(variables['Version.Minor'], 0)]
  - name: Version.Number
    value: $(Version.Major).$(Version.Minor).$(Version.Revision)
  # DevOps Scripts Package Info
  - name: DevOps.File
    value: scripts-1.1.0-master.tar.gz
  - name: DevOps.Container
    value: packages
  - name: DevOps.storageAccount
    value: amidostacksuksprod
  - name: DevOps.RG
    value: amido-stacks-rg-uks-prod
  # SelfConfig
  - name: self_repo
    value: stacks-dotnet-packages-messaging-asb
  - name: self_repo_dir
    value: "$(Agent.BuildDirectory)/s/$(self_repo)"
  - name: self_pipeline_repo
    value: "$(Agent.BuildDirectory)/s/stacks-pipeline-templates"
  - name: self_pipeline_scripts_dir
    value: "$(self_pipeline_repo)/scripts"
  # Path specific for this package, change accordingly
  - name: Package.Feed
    value: "Stacks"
  - name: Package.Public
    value: true
  - name: Package.nuget_service_connection
    value: NuGetAmidoStacksServiceConnection
  - name: Package.Path
    value: "src/Amido.Stacks.Messaging.Azure.ServiceBus"
  - name: Test.Path
    value: "$(Package.Path).Tests"
  - name: BuildPipeline.Path
    value: "build/azDevOps/packages-amido-stacks-messaging-asb.yml"
  - name: DotNet.Version
    value: "3.1.x"
  # Yamllint
  - name: yamllint_config_file
    value: "${{ variables.self_repo_dir }}/yamllint.conf"
  - name: yamllint_scan_directory
    value: "."

# Trigger paths specific for this package, change accordingly
trigger:
  branches:
    include:
      - main
  paths:
    include:
      - '*'

# Only build PRs into Main
pr:
  branches:
    include:
      - main

resources:
  repositories:
    - repository: templates
      type: github
      name: amido/stacks-pipeline-templates
      ref: refs/tags/v2.0.1
      # Created when you set up the connection to GitHub from Azure DevOps
      endpoint: amidostacks
  containers:
    - container: k8s_deploy
      image: amidostacks/ci-k8s:0.0.11

stages:
  - stage: BuildAndDeploy
    variables:
      - group: amido-stacks-infra-credentials-nonprod
    jobs:
      - job: Validation
        pool:
          vmImage: "ubuntu-18.04"
        steps:
          - checkout: self

          - checkout: templates

          # Update Build Number
          - template: azDevOps/azure/templates/v2/steps/build-updatebuildnumber-dotnet.yml@templates
            parameters:
              sourcebranch_name: "$(Build.SourceBranchName)"
              raw_version_number: "$(Version.Number)"
              default_branch: 'main'

          # Validates all YAML files in the repo to check they adhere to standards
          - template: azDevOps/azure/templates/v3/steps/build/test-validate-yaml.yml@templates
            parameters:
              pipeline_scripts_directory: "${{ variables.self_pipeline_scripts_dir }}"
              container: "k8s_deploy"
              yamllint_config_file: "${{ variables.yamllint_config_file }}"
              yamllint_scan_directory: "${{ variables.yamllint_scan_directory }}"

          # Build
          - template: azDevOps/azure/templates/v2/steps/build-pack-test-dotnet.yml@templates
            parameters:
              test_path: "${{variables.Test.Path}}"
              package_path: "${{variables.Package.Path}}"
              package_feed: "${{variables.Package.Feed}}"
              dotnet_core_version: "${{variables.DotNet.Version}}"

          # Publish
          - task: NuGetCommand@2
            displayName: 'Publish: Push Packages Public'
            condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/main')))
            inputs:
              command: 'push'
              packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
              nuGetFeedType: 'external'
              publishFeedCredentials: "${{variables.Package.nuget_service_connection}}"
